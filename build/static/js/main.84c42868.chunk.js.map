{"version":3,"sources":["speech.js","App.js","reportWebVitals.js","index.js"],"names":["Speech","React","useState","value","setValue","speak","useSpeechSynthesis","className","row","onChange","e","target","onClick","text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAuBeA,EAnBF,WAAK,IAAD,EAEUC,IAAMC,SAAS,IAFzB,mBAENC,EAFM,KAEAC,EAFA,KAGNC,EAAOC,+BAAPD,MACP,OACI,sBAAKE,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,SACI,0BAAUC,IAAI,KAAKL,MAAOA,EAC1BM,SACC,SAACC,GAAD,OAAMN,EAASM,EAAEC,OAAOR,YAG7B,qBAAKI,UAAU,QAAf,SACI,wBAAQK,QAAS,kBAAIP,EAAM,CAACQ,KAAKV,KAAjC,0BCDDW,MAbf,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SAEE,4DAGD,cAAC,EAAD,QCCQQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.84c42868.chunk.js","sourcesContent":["import  React from \"react\";\r\n\r\nimport {useSpeechSynthesis} from  \"react-speech-kit\";\r\n\r\nconst Speech=()=>{\r\n\r\n    const [value,setValue]=React.useState('');\r\n    const {speak}=useSpeechSynthesis();\r\n    return (\r\n        <div className=\"speech\">\r\n            <div className=\"group\">\r\n                <textarea row=\"10\" value={value} \r\n                onChange=\r\n                {(e)=> setValue(e.target.value)} \r\n                  ></textarea>\r\n            </div>\r\n            <div className=\"group\">\r\n                <button onClick={()=>speak({text:value}) } >Speech</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Speech;","// import logo from './logo.svg';\nimport './App.css';\nimport Speech from \"./speech\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"group\">\n\n        <h1>Text to Speech Converter</h1>\n      </div>\n      \n       <Speech/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}